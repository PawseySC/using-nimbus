I"£<p>Nimbus gives access to two types of storage by default, both of which can be considered like the Hard-disk drive of your desktop or laptop:</p>
<ol>
  <li>Root Volume - includes your home directory, and storage for the operating system of your instance</li>
  <li>Data Volume - a second, independent volume you can attach to your instance for working storage</li>
</ol>

<blockquote class="keypoints">
  <h2 id="best-practice">Best practice</h2>
  <p>We recommend you use the Root Volume strictly as the home for your operating software, and that all data and documents are kept on a Data Volume. This allows you to take full advantage of the flexible nature of cloud computing, so for example if your instance develops a problem, you can quickly destroy and recreate the instance (destroying the original Root Volume in the process) and attach your Data Volume to the new instance.</p>
</blockquote>

<p>This episode goes through setting-up and using Data Volumes with your instance.</p>

<blockquote class="challenge">
  <h2 id="activity-create-and-attach-a-volume">Activity: Create and attach a volume</h2>
  <p>From the Nimbus dashboard, go to <strong>Volumes</strong> then <strong>Volumes</strong>. Click on the <strong>Create Volume</strong> button.</p>

  <p><kbd><img src="../fig/Volumes_dashboard.png" /></kbd><br /><br /></p>

  <p>The <strong>Create Volume</strong> dialog box will appear. Enter a <strong>Volume Name</strong> and &gt; <strong>Size (GiB)</strong> for the volume, then click the <strong>Create Volume</strong> button at the bottom of the dialog box.</p>

  <p><kbd><img src="../fig/Volumes_create.png" /></kbd><br /><br /></p>

  <p>Once this is done, you will return to the <strong>Volumes</strong> panel, where you will now see the created data volume listed. In order to attach this volume to your instance, use itâ€™s drop down menu on the right to select <strong>Manage Attachments</strong>.</p>

  <p><kbd><img src="../fig/Volumes_manage.png" /></kbd><br /><br /></p>

  <p>The <strong>Manage Volume Attachments</strong> dialog box will open. Use the <strong>Attach To Instance</strong> menu to select your instance, then click the <strong>Attach Volume</strong> button.</p>

  <p><kbd><img src="../fig/nimbus_vol_manage_attachments.png" /></kbd><br /><br />
When the dialog box closes you should see your data volume attached to your instance in the volumes panel.
<br /></p>

  <p><kbd><img src="../fig/Volumes_attached.png" /></kbd><br /><br /></p>
</blockquote>

<blockquote class="challenge">
  <h2 id="activity-create-a-filesystem-and-copy-some-data">Activity: Create a filesystem and copy some data</h2>

  <p>We can check that our data volume is attached from the terminal logged into our instance.  If the unformatted volume is properly attached you should see:</p>

  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@test-instance:~# sudo fdisk -l /dev/vdc
Disk /dev/vdc: 20 GiB, 21474836480 bytes, 41943040 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
</code></pre></div>  </div>
  <p>We need to format and create a filesystem on the volume.  We will do this using the mkfs command.   <strong>Warning: Use mkfs only once for each volume.  It wipes any data already on it.</strong></p>
  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@test-instance:~# sudo mkfs.ext4 /dev/vdc
mke2fs 1.42.13 (17-May-2015)
Creating filesystem with 5242880 4k blocks and 1310720 inodes
Filesystem UUID: 4523e176-043a-4d3f-b4a9-0c74ac9a4562
Superblock backups stored on blocks:
Â Â Â Â Â Â Â Â 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
Â Â Â Â Â Â Â Â 4096000
Â 
Allocating group tables: done
Writing inode tables: done
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done
</code></pre></div>  </div>

  <p>Then we can mount the volume:</p>

  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>test-instance:~$ sudo mkdir /data
test-instance:~$ sudo mount /dev/vdc /data
test-instance:~$ df -h | grep vdc
/dev/vdcÂ Â Â Â Â Â Â Â  20GÂ Â  44MÂ Â  19GÂ Â  1% /data
test-instance:~$ sudo chown ubuntu /data
</code></pre></div>  </div>

  <p>You can now store files and subdirectories in the /data directory.</p>

  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>test-instance:~$ nano /data/my-data-file
# type some made up data into the file, save and quit (^X)
test-instance:~$ ls /data
my-data-file
</code></pre></div>  </div>

  <p>Once you have stored some data in your volume, you may wish to <strong>unmount</strong> it <strong>detach</strong> it from your instance.</p>

  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>test-instance:~$ sudo umount /data
</code></pre></div>  </div>

  <p>Next, select <strong>Manage Attachments</strong> from the drop-down menu of the volume, then <strong>Detach Volume</strong>, and &gt; again to confirm.<br />
<strong>Warning: If you detach a volume before you unmount it, you may lose data.</strong></p>
</blockquote>
:ET
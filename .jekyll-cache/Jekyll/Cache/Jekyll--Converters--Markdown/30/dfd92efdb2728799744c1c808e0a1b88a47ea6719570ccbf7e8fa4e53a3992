I"à<h2 id="transfer-protocols">Transfer Protocols</h2>

<p>HTTP is the protocol used to fetch data from web servers. It is a very simple protocol that is built upon TCP/IP and transfers via unencrypted text.</p>

<p>SCP is a network protocol which ensures the authenticity, encryption, and confidentiality of data by making use of SSH for transferring files. In SCP you do not need to start an FTP session or log into the remote host explicitly for transfer.</p>

<p>SFTP is another protocol packaged with SSH. Like SCP it uses a secure connection to transfer files, however unlike SCP it allows you to traverse the filesystem on both the local and remote systems.</p>

<p>There are many graphical file management tools which have transfer protocols like SFTP integrated into them (for eg cyberduck or filezilla), but in this lesson we will only be introducing command line tools.</p>

<blockquote class="challenge">
  <h2 id="activity-moving-data">Activity: Moving data</h2>
  <p>Weâ€™ll start by using the HTTP protocol in the form of the <code class="highlighter-rouge">wget</code> tool. To download a file to your instance using <code class="highlighter-rouge">wget</code> you need the URL for the file. The command is then simply:</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> $ wget `file_URL`
</code></pre></div>  </div>

  <p>For example, in the figure below you can see the setup page for the Software Carpentry lesson on the Unix Shell. By right-clicking on the data-shell.zip link you can copy the URL to the clipboard.
<br />
<kbd><img src="../fig/Data_copy_link.png" /></kbd><br /><br />
Then, from the terminal logged into your instance, type the wget command, paste the link and then hit enter. You should see output like that below:
<br />
<kbd><img src="../fig/Data_wget_file.png" /></kbd><br /><br /></p>

  <p>You can then check that the file is there:</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ubuntu@test:~$ ls -l
</code></pre></div>  </div>
  <p><br />
HTTP tools like <code class="highlighter-rouge">wget</code> are good for online data, but what about data you have on your machine, or another machine at your institute? This is where tools that use SSH are useful. So, for example, to copy a file from your local machine to your instance using <code class="highlighter-rouge">scp</code>:</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> $ scp -i `name_of_your_key`.pem `local_file_path` `login_name`@###.###.###.###:`instance_file_path`
</code></pre></div>  </div>
  <p><br />
This command might be starting to look a little complicated, but you just need to remember that most CLI copying tools, just like <code class="highlighter-rouge">cp</code>, require you to provide where something is that needs to be copied (origin), and where it needs to be copied to (destination) in that order.</p>

  <p>Lets try that now, either by creating a text file, or copying a file you already have. For example, from your local terminal:</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> $ nano random.txt
 $ scp -i ~/.ssh/test.pem random.txt ubuntu@146.118.67.254:
</code></pre></div>  </div>
  <p><br />
Note: If you leave the instance file path empty, it will copy your file into your ubuntu users home directory.</p>

  <p>So now if we log in to our instance we can check that the transfer worked:</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> $ ssh -i ~/.ssh/test.pem ubuntu@146.118.67.254
 ubuntu@test:~$ ls -l
</code></pre></div>  </div>
  <p><br />
If you want to copy multiple files you simply add them to the command:</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> $ scp -i `name_of_your_key`.pem `file1_path` `file2_path` `login_name`@###.###.###.###:`instance_file_path`
</code></pre></div>  </div>
  <p>Or if you need to copy an entire directory, you can do so by using the recursive flag (-r):</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> $ scp -r -i `name_of_your_key`.pem `local_directory_path` `login_name`@###.###.###.###:`instance_folder_path` 
</code></pre></div>  </div>
</blockquote>

<blockquote class="challenge">
  <h2 id="exercise">Exercise</h2>
  <p>To copy a file from your instance to your local computer, you have to swap the order of the origin and the destination. As an exercise, use <code class="highlighter-rouge">scp</code> to copy the data-shell.zip file we downloaded to the instance, from the instance to your local machine. Then make a copy of the data directory we created in the Storage episode.</p>

  <blockquote class="solution">
    <h2 id="solution">Solution</h2>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   $  scp -i ~/.ssh/test.pem ubuntu@146.118.67.254:data-shell.zip .
   $  scp -r -i ~/.ssh/test.pem ubuntu@146.118.67.254:/data .
</code></pre></div>    </div>

  </blockquote>
</blockquote>

<blockquote class="challenge">
  <h2 id="activity-managing-data-via-sftp">Activity: Managing data via SFTP</h2>
  <p>SCP is a popular solution that can prove helpful if you simply need to transfer files. However, if you need to list remote directories, create new directories, remove files, or do other administrative tasks, SFTP can do the job.</p>

  <p>We can open up an SFTP session, just like when logging in via ssh, by issuing the following command:</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> $ sftp -i `name_of_your_key`.pem `login_name`@###.###.###.###
</code></pre></div>  </div>
  <p><br />
You will connect to your instance and your prompt will change to an SFTP prompt.</p>

</blockquote>

:ET
I"<h2 id="managing-software">Managing software</h2>

<p>Unlike on your laptop or desktop computer, you interact with your Nimbus instance remotely using the command line, ie. via a terminal. This means managing software is also done via the terminal, which might be an unfamiliar experience for many. In this episode we cover some of the basics you’ll need to manage software on your instances via the command line interface.</p>

<h2 id="keeping-your-instance-up-to-date">Keeping your instance up-to-date</h2>

<p>Regularly updating your instance means you are installing the latest security patches, bug fixes and application upgrades. Updates on Ubuntu are managed via the <code class="highlighter-rouge">apt</code> application (there are a number of different Linux distributions, and not all of them are updated in the same fashion), which is actually a package manager. Package managers are a collection of software tools that automate the process of installing, upgrading, configuring, and removing computer programs for a computer’s operating system in a consistent manner.</p>

<blockquote class="keypoints">
  <h2 id="performing-administrative-tasks-on-linux">Performing administrative tasks on Linux</h2>
  <p>Before going any further it’s important to note what happens if you try to perform an administrative task on different operating systems. On Windows or a Mac a dialog box asks you if you wish to continue and you may be required to type in your password and click OK. Things are a little more complicated in Linux. In order to be able to run system commands you need to have permission at the root (most powerful) level of the system. You can achieve this via <code class="highlighter-rouge">sudo</code> (pronounced like “sue dough”), which stands for “super user do!”.</p>

  <p><kbd><img src="../fig/sandwich-1.png" /></kbd></p>
</blockquote>

<p>The first command you need is <code class="highlighter-rouge">sudo  apt  update</code>:</p>

<p><kbd><img src="../fig/apt_update.gif" /></kbd></p>

<p>This command updates the local database of available packages. The command fetches the package information from the respective repositories, which is why you see lots of URLs in the output.  At the end of the command, it tells you how many packages can be upgraded.
To see them run the following command: <code class="highlighter-rouge">apt list --upgradable</code>.</p>

<p>The second command you need is <code class="highlighter-rouge">sudo apt upgrade</code>:</p>

<p><kbd><img src="../fig/apt_upgrade.png" /></kbd></p>

<p>The upgrade command actually installs newer versions of the packages you have. After updating the lists, the package manager knows about available updates for the software you have installed. This is why you first want to update.</p>

<blockquote class="keypoints">
  <h2 id="use-these-commands-as-often-as-possible">Use these commands as often as possible!</h2>
  <p>Run them at least once a week, or every time you login, and this will keep your instance up to date.</p>

</blockquote>

<h2 id="installing-software">Installing software</h2>

<p>To install new software you use <code class="highlighter-rouge">sudo  apt  install &lt;package_name&gt;</code></p>

<blockquote class="exercise">
  <h2 id="activity-update-and-install-software-using-apt">Activity: Update and install software using apt</h2>
  <p>We’ll start by making sure our package database is up to date:</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   $ sudo apt update &amp;&amp; sudo apt upgrade -y
</code></pre></div>  </div>
  <p><br />
The above command is a shortcut, a combination of the two commands we learnt previously. The <code class="highlighter-rouge">&amp;&amp;</code> is a way to combine two commands such that the second command runs only when the previous command ran successfully. The <code class="highlighter-rouge">-y</code> flag automatically enters “yes” when the upgrade asks for your confirmation before installing updates.</p>

  <p><kbd><img src="../fig/apt_update_upgrade.gif" /></kbd></p>

  <p>Now we’ll install a command line calendar application called <code class="highlighter-rouge">calcurse</code>:</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   $ sudo apt install calcurse
   $ source .bashrc
   $ which calcurse
   $ calcurse
</code></pre></div>  </div>

  <p><kbd><img src="../fig/apt_calcurse.gif" /></kbd></p>

</blockquote>

<p>Apt is not the only useful package manager, another is conda, a package manager for Python. Conda quickly installs, runs, and updates packages and their dependencies. As well, conda is an environment management system. It easily creates, saves, loads, and switches between environments. It was created for Python programs but it can package and distribute software for any language.</p>

<blockquote class="exercise">
  <h2 id="activity-install-conda-and-use-it-to-install-pandas">Activity: Install conda and use it to install Pandas</h2>
  <p>Download and run the miniconda install shell script, test that the installation has worked, and then use it to install the Python package pandas:</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   $ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
   $ bash Miniconda3-latest-Linux-x86_64.sh
   $ source .bashrc
   $ conda -V
   $ conda list
   $ conda install pandas
   $ conda list pandas
</code></pre></div>  </div>
  <p><br /></p>

</blockquote>

<blockquote class="challenge">
  <h2 id="challenge">Challenge</h2>
  <p>Practice everything you’ve learned:</p>
  <ol>
    <li>Download the data from the following URL - http://swcarpentry.github.io/python-novice-gapminder/files/python-novice-gapminder-data.zip</li>
    <li>Use apt to install the unzip program.</li>
    <li>Unzip the data files.</li>
  </ol>

  <blockquote class="solution">
    <h2 id="solution">Solution</h2>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   $  wget http://swcarpentry.github.io/python-novice-gapminder/files/python-novice-gapminder-data.zip
   $  sudo apt install unzip
   $  unzip python-novice-gapminder-data.zip
</code></pre></div>    </div>

  </blockquote>
</blockquote>

<blockquote class="exercise">
  <h2 id="activity-use-pandas-to-examine-the-data">Activity: Use Pandas to examine the data</h2>

  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ipython
import pandas as pd

data = pd.read_csv('data/gapminder_gdp_americas.csv')
</code></pre></div>  </div>
  <p><br /></p>

</blockquote>
:ET
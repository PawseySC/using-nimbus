I"»#<blockquote class="callout">
  <h2 id="before-you-start">Before you start</h2>
  <p>If you donâ€™t have an instance created for training, create one now, and then log in and perform the following commands. If you do have a training instance, log in and perform the following:</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   $ sudo apt update &amp;&amp; sudo apt upgrade -y
</code></pre></div>  </div>
  <p><br />
We will be explaining what these commands do later in episode 9.</p>
</blockquote>

<blockquote class="callout">
  <h2 id="best-practice">Best practice</h2>
  <p>Nimbus gives access to two types of storage by default, both of which can be considered like the hard-disk drive of your desktop or laptop:</p>
  <ol>
    <li>
      <p>Root Volume - includes your home directory, and storage for the operating system of your instance, and has the device name <code class="highlighter-rouge">/dev/vda</code></p>
    </li>
    <li>
      <p>Data Volume - a second, independent volume you can attach to your instance for working storage, and has the device name <code class="highlighter-rouge">/dev/vdc</code></p>
    </li>
  </ol>

  <p>We recommend you use the Root Volume strictly as the home for your operating software, and that all data and documents are kept on a Data Volume. <strong>Discuss why you think we recommend this?</strong></p>
  <blockquote class="solution">
    <h2 id="answer">Answer</h2>
    <p>One answer is because it allows you to take full advantage of the flexible nature of cloud computing, so for example if your instance develops a problem, you can quickly delete and recreate the instance without losing your working data. When you delete an instance, the original root volume is deleted also; however, because you have not stored your working data there, you have no data loss. Then, when you create a new instance, you can attach the data volume to it and continue working with your data.</p>
  </blockquote>
</blockquote>

<p>This episode discusses how to set up and format a data volume with your instance. This is a two-step process. You complete step 1 â€“ attaching a new data volume to your instance â€“ from the Nimbus dashboard. You perform step 2 â€“ formatting the data volume and mounting (or connecting) it to your instance â€“ from the terminal.</p>

<blockquote class="challenge">
  <h2 id="activity-create-a-data-volume-for-an-instance">Activity: Create a data volume for an instance</h2>
  <h4 id="1-create-a-volume">1. Create a volume</h4>

  <p>From the Nimbus dashboard, go to <strong>Volumes</strong> then <strong>Volumes</strong>. Click on the <strong>Create Volume</strong> button.</p>

  <p><kbd><img src="../fig/Volumes_dashboard.png" /></kbd><br /><br /></p>

  <p>The <strong>Create Volume</strong> dialog box will appear. Enter a <strong>Volume Name</strong> and &gt; <strong>Size (GiB)</strong> for the volume, then click the <strong>Create Volume</strong> button at the bottom of the dialog box.</p>

  <p><kbd><img src="../fig/Volumes_create2.png" /></kbd><br /><br /></p>

  <h4 id="2-attach-a-volume">2. Attach a volume</h4>

  <p>On the <strong>Volumes</strong> page the data volume is listed. To attach this volume to your instance, use the drop down menu on the right to select <strong>Manage Attachments</strong>.</p>

  <p><kbd><img src="../fig/Volumes_manage.png" /></kbd><br /><br /></p>

  <p>The <strong>Manage Volume Attachments</strong> dialog box displays. In the <strong>Attach To Instance</strong> field, select your instance, then click the <strong>Attach Volume</strong> button.</p>

  <p><kbd><img src="../fig/nimbus_vol_manage_attachments.png" /></kbd><br /><br />
When the dialog box closes you should see your data volume attached to your instance in the volumes panel.
<br /></p>

  <p><kbd><img src="../fig/Volumes_attached.png" /></kbd><br /><br /></p>
</blockquote>
<p><br />
You have created and attached a new data volume to your instance. Now you must make it useable.
<br /></p>
<blockquote class="challenge">
  <h2 id="activity-prepare-a-data-volume-for-use">Activity: Prepare a data volume for use</h2>
  <h4 id="1-create-a-filesystem">1. Create a filesystem</h4>

  <p>To make a new data volume usable, you must format it. This means that you need to create a filesystem on the volume.
Log in to your instance from the terminal using SSH. Once logged in, test the unformatted volume is properly attached by entering the following command:</p>

  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ubuntu@test-instance:~$ sudo fdisk -l /dev/vdc
</code></pre></div>  </div>
  <p><br />
You should see output like below:</p>

  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Disk /dev/vdc: 20 GiB, 21474836480 bytes, 41943040 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
</code></pre></div>  </div>
  <p><br />
You next need to format and create a filesystem on the volume.  You do this using the <em>mkfs</em> command.</p>
  <blockquote class="keypoints">
    <h2 id="warning">Warning</h2>
    <p>Use mkfs only once on a volume.  The command erases all data already there. If you are not sure if the volume has a filesystem, you can run the following command:</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ubuntu@test:~$ sudo file -sL /dev/vdc
</code></pre></div>    </div>
    <p><br />
If there is a filesystem installed, you will see output like that below, and should therefore <strong>NOT</strong> run the <em>mkfs</em> command unless you are sure you want to format the volume.</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/dev/vdc: Linux rev 1.0 ext4 filesystem data, UUID=19916909-e2e2-4c44-8c34-fc7ded13918d (extents) (64bit) (large files) (huge files)
</code></pre></div>    </div>
    <p><br /></p>
  </blockquote>

  <p>To format a volume and create a filesystem, run the following command:</p>

  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ubuntu@test-instance:~$ sudo mkfs.ext4 /dev/vdc
</code></pre></div>  </div>
  <p><br />
You will see the following output:</p>

  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mke2fs 1.42.13 (17-May-2015)
Creating filesystem with 5242880 4k blocks and 1310720 inodes
Filesystem UUID: 4523e176-043a-4d3f-b4a9-0c74ac9a4562
Superblock backups stored on blocks:
Â Â Â Â Â Â Â Â 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
Â Â Â Â Â Â Â Â 4096000
Â 
Allocating group tables: done
Writing inode tables: done
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done
</code></pre></div>  </div>
  <p><br /></p>
  <h4 id="2-mount-the-filesystem">2. Mount the filesystem</h4>

  <p>Now that the creation of the filesystem is complete, you can mount the volume. Using this example will mount the volume to the new directory â€˜/dataâ€™:</p>

  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ubuntu@test-instance:~$ sudo mkdir /data
ubuntu@test-instance:~$ sudo mount /dev/vdc /data
ubuntu@test-instance:~$ df -h | grep vdc
/dev/vdcÂ Â Â Â Â Â Â Â  20GÂ Â  44MÂ Â  19GÂ Â  1% /data
</code></pre></div>  </div>
  <p><br />
The output of the <em>df</em> command shows that the volume attached to â€˜/dev/vdcâ€™ is now mounted to the â€˜/dataâ€™ directory. However, since you had to use root permissions to create the â€˜/dataâ€™ directory, you do not own it, and cannot use it to copy and access data. To change ownership, complete the following command:</p>

  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ubuntu@test-instance:~$ sudo chown ubuntu /data
</code></pre></div>  </div>
  <p><br /></p>

  <p>You can now store files and create subdirectories in the /data directory. Try it by creating a file, typing some made up data into it, then save and quit (^X):</p>

  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ubuntu@test-instance:~$ nano /data/my-data-file
ubuntu@test-instance:~$ ls /data
ubuntu@test-instance:~$ cat /data/my-data-file
</code></pre></div>  </div>
  <p><br /></p>

  <h4 id="3-unmount-a-volume">3. Unmount a volume</h4>

  <p>If you need to <strong>unmount</strong> your data volume and <strong>detach</strong> it from your instance, run the following command:</p>

  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ubuntu@test-instance:~$ sudo umount /data
</code></pre></div>  </div>
  <p><br />
Next, from the Nimbus dashboard select <strong>Volumes</strong> from the <strong>Volumes</strong> tab, use itâ€™s drop down menu on the right to select <strong>Manage Attachments</strong>, then click the <strong>Detach Volume</strong> button, and then again to confirm. <strong>WARNING: If you detach a volume before you unmount it, you may lose data.</strong></p>
</blockquote>
:ET
I"<h3 id="two-types-of-built-in-storage">Two types of built-in storage</h3>
<ol>
  <li>Root Volume - includes your home directory, and storage for the operating system of your virtual machine</li>
  <li>Data Volume - a second hard drive you can add to your instance for working storage</li>
</ol>

<p>Volumes are created and attached using the Nimbus web interface, then formatted and mounted.</p>

<blockquote class="challenge">
  <h2 id="activity-create-a-volume">Activity: Create a volume</h2>
  <p>Go to <strong>Volumes</strong> then <strong>Volumes</strong>.</p>

  <p><kbd><img src="../fig/Volumes_dashboard.png" /></kbd><br /><br /></p>

  <p>Click on <strong>Create Volume</strong>.  A pop-up will appear (see screenshot below). Enter a <strong>Volume Name</strong> and &gt; <strong>Size (GiB)</strong> for the volume, then click <strong>Create Volume</strong> at the bottom of the pop-up.</p>

  <p><kbd><img src="../fig/Volumes_create.png" /></kbd><br /><br /></p>

  <p>You will now see the created data volume listed, and later we will attach this to our instance and  prepare it for accepting data.</p>

  <p><kbd><img src="../fig/Volumes_manage.png" /></kbd><br /><br /></p>
</blockquote>

<blockquote class="challenge">
  <h2 id="activity-attach-a-volume-to-an-instance">Activity: Attach a volume to an instance</h2>

  <p>Select <strong>Manage Attachments</strong> from the drop-down menu of the data volume you created</p>

  <p><kbd><img src="../fig/nimbus_vol_manage_attachments.png" /></kbd><br /><br /></p>

  <p>We can check that our data volume is attached from the terminal logged into our instance, but we can’t use it just yet.  If the unformatted volume is properly attached you should see:</p>

  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@test-instance:~# sudo fdisk -l /dev/vdc
Disk /dev/vdc: 20 GiB, 21474836480 bytes, 41943040 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
</code></pre></div>  </div>
</blockquote>

<blockquote class="challenge">
  <h2 id="activity-format-and-mount-a-filesystem">Activity: Format and mount a filesystem</h2>

  <p>We need to format and create a filesystem on the volume.  We will do this using the mkfs command.   <strong>Warning: Use mkfs only once for each volume.  It wipes any data already on it.</strong></p>

  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@test-instance:~# sudo mkfs.ext4 /dev/vdc
mke2fs 1.42.13 (17-May-2015)
Creating filesystem with 5242880 4k blocks and 1310720 inodes
Filesystem UUID: 4523e176-043a-4d3f-b4a9-0c74ac9a4562
Superblock backups stored on blocks:
        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
        4096000
 
Allocating group tables: done
Writing inode tables: done
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done
</code></pre></div>  </div>

  <p>Then we can mount the volume:</p>

  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>test-instance:~$ sudo mkdir /data
test-instance:~$ sudo mount /dev/vdc /data
test-instance:~$ df -h | grep vdc
/dev/vdc         20G   44M   19G   1% /data
test-instance:~$ sudo chown ubuntu /data
</code></pre></div>  </div>

  <p>You can now store files and subdirectories in the /data directory.</p>

  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>test-instance:~$ nano /data/my-data-file
# type some made up data into the file, save and quit (^X)
test-instance:~$ ls /data
my-data-file
</code></pre></div>  </div>
</blockquote>

<h2 id="unmount-the-volume">Unmount the volume</h2>

<p>Once you have stored some data in your volume, you may wish to <strong>unmount</strong> it <strong>detach</strong> it from your instance.</p>

<div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>test-instance:~$ sudo umount /data
</code></pre></div></div>

<p>Next, select <strong>Manage Attachments</strong> from the drop-down menu of the volume, then <strong>Detach Volume</strong>, and again to confirm.<br />
<strong>Warning: If you detach a volume before you unmount it, you may lose data.</strong></p>

<blockquote class="exercise">
  <h2 id="exercise">Exercise</h2>
  <p>Practice everything you’ve learned by deleting your instance, creating another one, and attaching<br />
your data volume to the new instance. Only this time, mount the volume somewhere different, say /data2.</p>
  <blockquote class="reminder">
    <h2 id="reminder">Reminder</h2>
    <p>Remember, you do <strong>not</strong> need to create a filesystem again, because that would wipe your data.</p>
  </blockquote>
</blockquote>
:ET